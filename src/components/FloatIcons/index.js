import React from "react"

// Styles
import "./FloatIcons.scss"

const FloatIcons = () => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      xmlnsXlink="http://www.w3.org/1999/xlink"
      width="100%"
      height="100%"
      viewBox="0 0 1558.4 843.59"
      className="float-icons"
    >
      {new Array(20).fill(0).map((item, index) => {
        const positiveOrNegative = Math.random() < 0.5 ? -1 : 1
        const opacity = Math.random()
        const x = 50 * positiveOrNegative * (Math.random() * 50)
        const y = 90 * positiveOrNegative * (Math.random() * 10)
        return (
          <g
            opacity={`${opacity < 0.7 ? 0.7 : opacity}`}
            key={index}
            id="ball"
            style={{
              transform: `translate(${x}px, ${y}px) scale(${
                opacity < 0.7 ? 0.7 : opacity
              })`,
            }}
          >
            <path
              d="M248,77.78h3.87a.72.72,0,0,1,0,1.44H248l-3.37,6.08a.74.74,0,0,1-.63.37h-7.15a.74.74,0,0,1-.63-.37l-3.37-6.08H229a.72.72,0,0,1,0-1.44h3.87l3.37-6.08a.72.72,0,0,1,.63-.37H244a.72.72,0,0,1,.63.37Zm-10.73,6.45h6.31l3.18-5.73-3.18-5.73h-6.31l-3.18,5.73Z"
              transform={`translate(-15.3 -3.41)`}
              fillRule="evenodd"
              fill={`${opacity < 0.5 ? "black" : "#07e17b"}`}
            />
            <path
              d="M260.84,71.76a0,0,0,0,1,0,0,21.35,21.35,0,0,1,0,13.41.06.06,0,0,1,0,0,21.39,21.39,0,0,1-3.78,6.87.31.31,0,0,1-.09.11,21.44,21.44,0,0,1-10.78,7l-.13,0a21.24,21.24,0,0,1-11.19,0l-.13,0a21.47,21.47,0,0,1-10.79-7,.44.44,0,0,1-.08-.11,21.39,21.39,0,0,1-3.78-6.87l0,0a21.5,21.5,0,0,1,0-13.41s0,0,0,0a21.54,21.54,0,0,1,3.78-6.88.41.41,0,0,1,.09-.1,21.41,21.41,0,0,1,33,0l.08.1A21.74,21.74,0,0,1,260.84,71.76Zm-4.28,18.66-.45-.8a.7.7,0,0,0-.62-.37h-6.83l-2.24-2.62a.71.71,0,0,0-1.08.93l2.13,2.49-3.34,6a.73.73,0,0,0,0,.7l.73,1.31a19.76,19.76,0,0,1-8.79,0l.73-1.31a.71.71,0,0,0,0-.69l-3.34-6,2.13-2.49a.7.7,0,0,0-.09-1,.71.71,0,0,0-1,.06l-2.24,2.62h-6.83a.7.7,0,0,0-.62.37l-.45.8a20.17,20.17,0,0,1-2.61-4.75h.82a.74.74,0,0,0,.63-.37l3.57-6.45a.73.73,0,0,0,0-.7l-3.57-6.45a.72.72,0,0,0-.63-.37h-.82a20.17,20.17,0,0,1,2.61-4.75l.45.8a.7.7,0,0,0,.62.37h6.83l2.23,2.62a.72.72,0,0,0,1,.06.7.7,0,0,0,.09-1L233.46,67l3.34-6a.73.73,0,0,0,0-.7l-.73-1.31a19.71,19.71,0,0,1,8.78,0l-.72,1.31a.73.73,0,0,0,0,.7l3.34,6-2.13,2.49a.7.7,0,0,0,.09,1,.71.71,0,0,0,1-.06l2.24-2.62h6.83a.7.7,0,0,0,.62-.37l.45-.8a20.17,20.17,0,0,1,2.61,4.75h-.82a.72.72,0,0,0-.63.37l-3.57,6.45a.73.73,0,0,0,0,.7l3.57,6.45a.74.74,0,0,0,.63.37h.82A20.17,20.17,0,0,1,256.56,90.42ZM234.64,59.3l.71,1.29-3.18,5.73h-6.31l-.52-.95A20.08,20.08,0,0,1,234.64,59.3Zm21,6.07a20.06,20.06,0,0,0-9.31-6.07l-.7,1.29,3.17,5.73h6.32Zm-34.32,7.4a20,20,0,0,0,0,11.46h.89l3.18-5.73-3.18-5.73Zm37.5,11.46h.89a20,20,0,0,0,0-11.46h-.89l-3.18,5.73ZM234.64,97.7a20.08,20.08,0,0,1-9.3-6.07l.52-.95h6.31l3.18,5.73Zm10.94-1.29.7,1.29a20.06,20.06,0,0,0,9.31-6.07l-.52-.95h-6.32Z"
              transform="translate(-15.23 -3.41)"
              fillRule="evenodd"
              fill={`${opacity < 0.5 ? "black" : "#07e17b"}`}
            />
          </g>
        )
      })}

      {new Array(20).fill(0).map((item, index) => {
        const positiveOrNegative = Math.random() < 0.5 ? -1 : 1
        const opacity = Math.random()
        const x = 50 * positiveOrNegative * (Math.random() * 50)
        const y = 90 * positiveOrNegative * (Math.random() * 10)

        return (
          <g
            opacity={`${Math.random() < 0.7 ? 0.7 : opacity}`}
            key={index}
            opacity="0.2"
            id="gloves"
            style={{
              transform: `translate(${x}px, ${y}px) scale(${
                opacity < 0.7 ? 0.7 : opacity
              })`,
            }}
          >
            <path
              d="M1441.45,113.39a3.51,3.51,0,0,1,1.71,4.63l-4.56,9.46,1.11,3.07a2.09,2.09,0,0,1,2,1.37l1.2,3.3a2.09,2.09,0,0,1-1.25,2.69l-13.85,5a1.42,1.42,0,0,1-1.51-.36l-1.72,1.44a1.44,1.44,0,0,1-1,.33,1.46,1.46,0,0,1-.95-.5l-3.09-3.69a1.4,1.4,0,0,1,0-1.79l-5.73-3.7a12.05,12.05,0,0,1-2.62-2.32l-8.63-10.28a2.85,2.85,0,0,1,.12-3.86,2.77,2.77,0,0,1,1.45-.74l-1.58-1.86a2.77,2.77,0,0,1,.35-3.91,2.74,2.74,0,0,1,1.29-.6l-.18-.22a2.77,2.77,0,0,1,2.37-4.54,2.81,2.81,0,0,1,1.88,1l.19.23a2.55,2.55,0,0,1,.65-1,2.77,2.77,0,0,1,4.06.21l5.29,6.31-1.76-4.84a2.82,2.82,0,0,1,1.68-3.59,2.87,2.87,0,0,1,1.45-.11l-.1-.29a2.8,2.8,0,1,1,5.27-1.92l.11.3a2.77,2.77,0,0,1,1-.78,2.81,2.81,0,0,1,3.79,1.59l5.42,14.91,1.51-3.24A3.51,3.51,0,0,1,1441.45,113.39Zm-19.58-11.47a1.4,1.4,0,0,0-.84,1.8l3.41,9.39a3.47,3.47,0,0,1,2.61-1.08l-3.38-9.27A1.4,1.4,0,0,0,1421.87,101.92Zm-18.22,17.3a1.46,1.46,0,0,0,0,2l7,8.4a8.33,8.33,0,0,1,4-1.51c4.43-.42,7,2.74,9.29,5.53l.49.59,5.81-4.87-2.06-2.46a.72.72,0,0,1-.14-.24,1.11,1.11,0,0,1,0-.19s0-.05,0-.08l.94-10.69a2.07,2.07,0,0,0-3.08-2,2,2,0,0,0-1,1.62l-.31,3.51a1.35,1.35,0,0,1-1,1.21,1.4,1.4,0,0,1-1.49-.43l-10-12a1.39,1.39,0,0,0-1-.49,1.34,1.34,0,0,0-1,.39,1.44,1.44,0,0,0,0,2l5.14,6.14,1.44,1.72a.58.58,0,0,1,.14.24.69.69,0,0,1-.34.82.71.71,0,0,1-.87-.16l-8.38-10a1.42,1.42,0,0,0-.94-.49,1.38,1.38,0,0,0-1.17,2.25l8.39,10a.68.68,0,0,1,.16.51.73.73,0,0,1-.25.48.72.72,0,0,1-.21.12h0l-.06,0-.18,0h-.08l-.17,0-.06,0a.53.53,0,0,1-.2-.16l-6.67-7.94a1.37,1.37,0,1,0-2.1,1.77l3.11,3.7,4.88,5.82a.72.72,0,0,1,.15.63.71.71,0,0,1-.44.48h-.08a.58.58,0,0,1-.19,0H1411a.48.48,0,0,1-.17,0s0,0-.07,0a1,1,0,0,1-.2-.15l-4.88-5.83a1.41,1.41,0,0,0-1-.49A1.38,1.38,0,0,0,1403.65,119.22ZM1418,107.71a1.4,1.4,0,0,1,2.64-1l2.92,8c0,.14-.06.27-.08.41l-.28,3.5-2.12-2.53Zm19.21,19.43h0l4.7-9.71a2.11,2.11,0,0,0-3.83-1.77l-1.51,3.24a1.37,1.37,0,0,1-1.33.81,1.39,1.39,0,0,1-1.25-.92l-5.43-14.91a1.39,1.39,0,0,0-1.89-.79A1.49,1.49,0,0,0,1426,105l2.76,7.58a3.38,3.38,0,0,1,1.68,3.26l-.91,10.4,2,2.34a2.09,2.09,0,0,1,2.32.61l2.2,2.62v0l2.38-.87-1.18-3.24a.69.69,0,0,1,0-.25A.58.58,0,0,1,1437.21,127.14Zm-22.64,6.36a10.22,10.22,0,0,1-2.31-2l-.67-.8a6.89,6.89,0,0,1,3.25-1.19c3.68-.35,5.81,2.26,8.07,5l.5.6-2.78,2.34Zm6,5.77,3.1,3.69,11.1-9.31a.7.7,0,0,0,.09-1l-2.2-2.62a.7.7,0,0,0-.78-.21,1.13,1.13,0,0,0-.21.12l-10.59,8.89Zm19.81-6.87,1.21,3.3a.7.7,0,0,1-.42.89l-13.66,5,4.72-4,6.24-2.27.24.66a.7.7,0,1,0,1.32-.48l-.24-.66a1.4,1.4,0,0,0-1.8-.83l-2.62.95.3-.25a2.07,2.07,0,0,0,.74-1.62l3.08-1.12A.69.69,0,0,1,1440.42,132.4Z"
              transform="translate(-15.23 -3.41)"
              fillRule="evenodd"
              fill={`${opacity < 0.5 ? "black" : "#008E4C"}`}
            />
            <path
              d="M1433,132.49a1.4,1.4,0,0,0-2-.17l-1,.86,0,0-6.9,5.79a.7.7,0,0,0,.2,1.2.69.69,0,0,0,.7-.13l6.93-5.82,0,0,1-.8.45.52a.66.66,0,0,0,.65.24.68.68,0,0,0,.54-.45.69.69,0,0,0-.12-.69l-.45-.53Z"
              transform="translate(-15.23 -3.41)"
              fillRule="evenodd"
              fill={`${opacity < 0.5 ? "black" : "#008E4C"}`}
            />
          </g>
        )
      })}

      {new Array(20).fill(0).map((item, index) => {
        const positiveOrNegative = Math.random() < 0.5 ? -1 : 1
        const opacity = Math.random()
        const x = 50 * positiveOrNegative * (Math.random() * 50)
        const y = 90 * positiveOrNegative * (Math.random() * 10)

        return (
          <g
            opacity={`${Math.random() < 0.7 ? 0.7 : opacity}`}
            key={index}
            opacity="0.2"
            id="flag"
            style={{
              transform: `translate(${x}px, ${y}px) scale(${
                opacity < 0.7 ? 0.7 : opacity
              })`,
            }}
          >
            <path
              d="M1302.82,477.28a.7.7,0,0,1,.51,1l-5.93,10.29,0,.05-5.08,8.78a2.06,2.06,0,0,1-2.13,1.08c-3.43-.66-8.33-2.71-13.11-5.46a47.69,47.69,0,0,1-11.23-8.56L1259,496.36a1.41,1.41,0,0,1-1.92.51l-1.21-.7a1.39,1.39,0,0,1-.51-1.91l19.25-33.34a2.1,2.1,0,0,1,3.64,2.1l-.11.19c2.07,2.52,6.3,5.78,11.19,8.6C1294.44,474.77,1299.62,476.87,1302.82,477.28Zm-32.12-4,0-.05,6.28-10.89a.7.7,0,1,0-1.21-.7L1256.55,495l1.21.7Zm18.52.11a46.08,46.08,0,0,0,12.4,5.13l-5.21,9c-3.09-.52-7.75-2.41-12.44-5.06Zm-17.06.15c2,2.42,6,5.5,10.6,8.25l5.25-9.1a46.25,46.25,0,0,1-10.64-8.17Zm6.2,18.67a44.63,44.63,0,0,0,12.07,5,.73.73,0,0,0,.65-.41l4.59-7.94a46,46,0,0,1-12.4-5.12Zm-1.21-.7a44.67,44.67,0,0,1-10.34-8,.72.72,0,0,1,0-.76l4.59-7.94a46.25,46.25,0,0,0,10.64,8.17Z"
              transform="translate(-15.23 -3.41)"
              fillRule="evenodd"
              fill={`${opacity < 0.5 ? "black" : "#07e17b"}`}
            />
            <path
              d="M1275.5,472a.69.69,0,0,0,1-.26l1.62-2.81a13.66,13.66,0,0,0,2.74,2.1.71.71,0,0,0,1-.26.72.72,0,0,0-.26-1,11.48,11.48,0,0,1-3-2.49.7.7,0,0,0-1.15.09l-2.1,3.63a.7.7,0,0,0,.26,1Z"
              transform="translate(-15.23 -3.41)"
              fillRule="evenodd"
              fill={`${opacity < 0.5 ? "black" : "#07e17b"}`}
            />
            <path
              d="M1269.55,482.26a.7.7,0,0,0,1-.26l1.62-2.81a13.61,13.61,0,0,0,2.74,2.09.7.7,0,0,0,1-.25.71.71,0,0,0-.26-1,11.88,11.88,0,0,1-3-2.49.73.73,0,0,0-.6-.27.7.7,0,0,0-.55.35l-2.1,3.64a.71.71,0,0,0,.26,1Z"
              transform="translate(-15.23 -3.41)"
              fillRule="evenodd"
              fill={`${opacity < 0.5 ? "black" : "#07e17b"}`}
            />
          </g>
        )
      })}

      {new Array(20).fill(0).map((item, index) => {
        const positiveOrNegative = Math.random() < 0.5 ? -1 : 1
        const opacity = Math.random()
        const x = 50 * positiveOrNegative * (Math.random() * 50)
        const y = 90 * positiveOrNegative * (Math.random() * 10)

        return (
          <g
            opacity={`${Math.random() < 0.7 ? 0.7 : opacity}`}
            key={index}
            opacity="0.2"
            id="boot"
            style={{
              transform: `translate(${x}px, ${y}px) scale(${
                opacity < 0.7 ? 0.7 : opacity
              })`,
            }}
          >
            <path
              d="M47.53,387.35c-.63-.62-1.38-1.25-2.25-2A50.5,50.5,0,0,1,38.77,379a.69.69,0,0,0-.63-.25.73.73,0,0,0-.55.41,9.71,9.71,0,0,1-2.57,3c-2.92,2.45-7.52,3.06-7.84,3.1a.83.83,0,0,0-.55.25c-.27.24-1.09,1-1.15,6.8a4.46,4.46,0,0,1-.05.63.67.67,0,0,0,0,.28,14.26,14.26,0,0,1-.91,3.07.64.64,0,0,0-.11.27c-.38.9-.83,1.84-1.34,2.79a.57.57,0,0,0-.11.22c-.47.87-1,1.76-1.51,2.63h0a.64.64,0,0,0-.15.25c-1.86,3.05-3.92,5.9-5.2,7.62a4.16,4.16,0,0,0-.12,4.82l0,.06c.08.11.14.22.23.33a4.91,4.91,0,0,0,6.33,1l.93,1.11a1.4,1.4,0,0,0,2,.17l1.61-1.35a1.4,1.4,0,0,0,.17-2l-.9-1.07,1.07-.9.9,1.07a1.4,1.4,0,0,0,2,.17l1.61-1.35a1.4,1.4,0,0,0,.18-2l-.9-1.07,1.07-.9.9,1.07a1.4,1.4,0,0,0,2,.17l1.61-1.35a1.4,1.4,0,0,0,.17-2l-.9-1.07,6.44-5.4.9,1.07a1.4,1.4,0,0,0,2,.17l1.61-1.35a1.4,1.4,0,0,0,.17-2l-.9-1.07.54-.45c.17-.16.34-.32.5-.49l.48.57a1.41,1.41,0,0,0,2,.18l1.6-1.35a1.41,1.41,0,0,0,.18-2l-2.13-2.54A6.5,6.5,0,0,0,47.53,387.35Zm-30.6,26.52a2.8,2.8,0,0,1,.25-2.93h0c1.42-1.89,3.21-4.41,4.87-7.06a3.38,3.38,0,0,1,.64,1.06.71.71,0,0,0,.51.48.69.69,0,0,0,.82-.9,5.13,5.13,0,0,0-1.2-1.89c.31-.53.62-1.06.91-1.6a3,3,0,0,1,.44.82.71.71,0,0,0,.52.5.72.72,0,0,0,.68-.22.7.7,0,0,0,.14-.69,4.94,4.94,0,0,0-1.06-1.74c.29-.57.57-1.14.82-1.7a2.79,2.79,0,0,1,.39.77.7.7,0,0,0,.88.46.56.56,0,0,0,.24-.13.68.68,0,0,0,.22-.74,4.64,4.64,0,0,0-1.12-1.8,16.93,16.93,0,0,0,.64-1.94,3.24,3.24,0,0,1,.64,1.07.71.71,0,0,0,.35.41.7.7,0,0,0,.77-.08.68.68,0,0,0,.22-.74,5.15,5.15,0,0,0-1.37-2.07c2.89-4.09,4.56-4.15,6.18-4.2A5.24,5.24,0,0,0,37,387.8a.7.7,0,1,0-.9-1.07,3.86,3.86,0,0,1-2.82.89c-1.69,0-3.59.1-6.37,3.55.11-3.23.48-4.25.62-4.52,1-.14,5.4-.87,8.4-3.39a13.45,13.45,0,0,0,2.42-2.58c.48.55.95,1.05,1.42,1.53a9.19,9.19,0,0,1-1.31,2.11.72.72,0,0,0,.06.94.7.7,0,0,0,.94,0l.1-.1a12.31,12.31,0,0,0,1.26-1.93c1.29,1.24,2.5,2.27,3.56,3.17.57.48,1.09.91,1.54,1.32.61,1.93-.53,4.08-3.4,6.4a.57.57,0,0,0-.13.08L22,411.33C19.38,413.53,17.61,413.84,16.93,413.87Zm31.18-22.61a.7.7,0,0,1-.16-.41,4.39,4.39,0,0,0-.53-1.37c-.26,1.79-1.48,3.63-3.71,5.5l-.39.32-.1.06L22.91,412.41a12.29,12.29,0,0,1-4.82,2.69,3.49,3.49,0,0,0,4.1-.25v0l.54-.45a.69.69,0,0,1,1,.09.71.71,0,0,1-.08,1l.9,1.07,1.61-1.35-1.35-1.61a.69.69,0,0,1,.09-1L27,410.8l0,0,.53-.45a.71.71,0,0,1,1,.09.7.7,0,0,1-.09,1l.9,1.07L31,411.13l-1.34-1.61a.7.7,0,0,1,.08-1l2.13-1.79s0,0,0,0l.54-.45a.71.71,0,0,1,1,.09.7.7,0,0,1-.09,1l.9,1.07,1.61-1.35-1.35-1.61a.69.69,0,0,1,.09-1L42,398.2h0l0,0,.52-.43a.71.71,0,0,1,1,.08.7.7,0,0,1-.09,1l.9,1.07L46,398.53l-1.35-1.61a.71.71,0,0,1,.08-1l1.08-.9a3.83,3.83,0,0,0,.8-.9s.14-.24.3-.58a.72.72,0,0,1,.57-.42.73.73,0,0,1,.65.3.7.7,0,0,1,.05.7l-.14.3.73.86,1.6-1.35Z"
              transform="translate(-15.23 -3.41)"
              fillRule="evenodd"
              fill={`${opacity < 0.5 ? "black" : "#008E4C"}`}
            />
            <path
              d="M41.47,387.7l.54-.45a.71.71,0,0,0,.08-1,.7.7,0,0,0-1-.08l-.54.45a.7.7,0,1,0,.9,1.07Z"
              transform="translate(-15.23 -3.41)"
              fillRule="evenodd"
              fill={`${opacity < 0.5 ? "black" : "#008E4C"}`}
            />
            <path
              d="M43.27,389.84l.54-.45a.7.7,0,0,0,.08-1,.69.69,0,0,0-1-.09l-.54.45a.7.7,0,1,0,.9,1.07Z"
              transform="translate(-15.23 -3.41)"
              fillRule="evenodd"
              fill={`${opacity < 0.5 ? "black" : "#008E4C"}`}
            />
          </g>
        )
      })}

      {new Array(20).fill(0).map((item, index) => {
        const positiveOrNegative = Math.random() < 0.5 ? -1 : 1
        const opacity = Math.random()
        const x = 50 * positiveOrNegative * (Math.random() * 50)
        const y = 90 * positiveOrNegative * (Math.random() * 10)

        return (
          <g
            opacity={`${Math.random() < 0.7 ? 0.7 : opacity}`}
            key={index}
            opacity="0.2"
            id="field"
            style={{
              transform: `translate(${x}px, ${y}px) scale(${
                opacity < 0.7 ? 0.7 : opacity
              })`,
            }}
          >
            <path
              d="M317.62,675.81l-24.24,14a.7.7,0,0,0-.26,1l20.3,35.16a.7.7,0,0,0,1,.26l24.24-14a.7.7,0,0,0,.26-1l-20.3-35.16A.7.7,0,0,0,317.62,675.81Zm9.55,17.93L319.85,698a4.9,4.9,0,0,0-8.4,4.85l-.65.37a.7.7,0,1,0,.7,1.22l.65-.38a4.9,4.9,0,0,0,8.4-4.85l7.32-4.22,9.45,16.36-4.25,2.45-1.4-2.42a2.09,2.09,0,0,0-2.86-.77l-2,1.17a4.19,4.19,0,0,0-6.85,4l-2,1.17a2.1,2.1,0,0,0-.76,2.87l1.4,2.42-4.25,2.45-9.45-16.36,2.43-1.4a.7.7,0,0,0-.7-1.22l-2.43,1.4-9.45-16.36,4.25-2.45,1.4,2.42a2.09,2.09,0,0,0,2.86.77l2-1.17a4.19,4.19,0,0,0,6.85-4l2-1.17a2.1,2.1,0,0,0,.76-2.87l-1.4-2.42,4.25-2.45Zm-27-6.21,12.12-7,1.4,2.42a.7.7,0,0,1-.25,1l-10.92,6.3a.69.69,0,0,1-.95-.26Zm9.22,2a2.79,2.79,0,0,0,1.39-2.43l-4.2,2.42A2.8,2.8,0,0,0,309.36,689.49Zm10,10.4-.55.32a.7.7,0,0,1-.95-.26.71.71,0,0,1,.25-1l.55-.31a3.5,3.5,0,0,0-5.94,3.43l.55-.32a.7.7,0,0,1,.95.26.71.71,0,0,1-.25,1l-.55.31a3.5,3.5,0,0,0,5.94-3.43Zm3.32,12.62a2.79,2.79,0,0,0-1.39,2.43l4.2-2.42A2.8,2.8,0,0,0,322.64,712.51Zm-2.9,9-1.4-2.42a.7.7,0,0,1,.25-1l10.92-6.3a.69.69,0,0,1,.95.26l1.4,2.42Z"
              transform="translate(-15.23 -3.41)"
              fillRule="evenodd"
              fill={`${opacity < 0.5 ? "black" : "#07e17b"}`}
            />
            <path
              d="M316.18,700.32a.82.82,0,0,0-.27,0,.58.58,0,0,0-.37.17.22.22,0,0,0-.09.1.44.44,0,0,0-.08.11.69.69,0,0,0-.05.13.82.82,0,0,0,0,.27.79.79,0,0,0,.08.26l.09.11a.22.22,0,0,0,.1.09l.11.08.13,0,.13,0h.14a.28.28,0,0,0,.13,0l.13,0a.61.61,0,0,0,.2-.19.7.7,0,0,0,.13-.24l0-.13a.61.61,0,0,0,0-.14.28.28,0,0,0,0-.13.5.5,0,0,0-.05-.13.61.61,0,0,0-.19-.2.7.7,0,0,0-.24-.13Z"
              transform="translate(-15.23 -3.41)"
              fillRule="evenodd"
              fill={`${opacity < 0.5 ? "black" : "#07e17b"}`}
            />
            <path
              d="M303.74,699a.7.7,0,0,0,.86-.49l.2-.76.76.2a.7.7,0,0,0,.84-.5.69.69,0,0,0-.48-.85l-.76-.2.2-.76a.7.7,0,0,0-.49-.85.71.71,0,0,0-.86.49l-.2.75-.76-.2a.7.7,0,0,0-.36,1.35l.76.21-.21.75a.7.7,0,0,0,.5.86Z"
              transform="translate(-15.23 -3.41)"
              fillRule="evenodd"
              fill={`${opacity < 0.5 ? "black" : "#07e17b"}`}
            />
            <path
              d="M318.15,690.3a.72.72,0,0,0,.49.86l.76.2-.21.76a.7.7,0,1,0,1.35.36l.21-.76.76.21a.7.7,0,0,0,.36-1.36l-.76-.2.2-.76a.69.69,0,0,0-.49-.84.7.7,0,0,0-.86.48l-.2.76-.76-.2a.69.69,0,0,0-.85.49Z"
              transform="translate(-15.23 -3.41)"
              fillRule="evenodd"
              fill={`${opacity < 0.5 ? "black" : "#07e17b"}`}
            />
            <path
              d="M309.63,694.17l-1.82,1.05a.7.7,0,0,0,.7,1.21l.41-.23c-1,2.88-2,7.42,1.72,15.11a.68.68,0,0,0,.4.36.72.72,0,0,0,.54,0l0,0a.7.7,0,0,0,.28-.91c-3.52-7.24-2.65-11.32-1.65-14.06l.18.3a.69.69,0,0,0,.95.26.7.7,0,0,0,.26-1l-1.05-1.81a.7.7,0,0,0-1-.26Z"
              transform="translate(-15.23 -3.41)"
              fillRule="evenodd"
              fill={`${opacity < 0.5 ? "black" : "#07e17b"}`}
            />
            <path
              d="M315,713.29a.7.7,0,0,0-.25,1,1.05,1.05,0,1,1-1.44-.39.69.69,0,0,0,.26-1,.7.7,0,0,0-1-.26,2.45,2.45,0,1,0,3.35.9.7.7,0,0,0-1-.26Z"
              transform="translate(-15.23 -3.41)"
              fillRule="evenodd"
              fill={`${opacity < 0.5 ? "black" : "#07e17b"}`}
            />
          </g>
        )
      })}

      {new Array(20).fill(0).map((item, index) => {
        const positiveOrNegative = Math.random() < 0.5 ? -1 : 1
        const opacity = Math.random()
        const x = 50 * positiveOrNegative * (Math.random() * 50)
        const y = 90 * positiveOrNegative * (Math.random() * 10)

        return (
          <g
            opacity={`${Math.random() < 0.7 ? 0.7 : opacity}`}
            key={index}
            opacity="0.2"
            id="hand"
            style={{
              transform: `translate(${x}px, ${y}px) scale(${
                opacity < 0.7 ? 0.7 : opacity
              })`,
            }}
          >
            <path
              d="M1566.74,792.82l4.07,3.93a7.69,7.69,0,0,1,2.33,5.07l.49,8.22a.69.69,0,0,1-.35.65l-7,4.07a2.78,2.78,0,0,1-3.44-.5l-1.94-2.07a2.79,2.79,0,0,1-4.76,1,2.78,2.78,0,0,1-4.73-.17.89.89,0,0,1-.08-.17l-.15.11a2.8,2.8,0,0,1-4.11-3.14l1-3.69c0-.05-.07-.09-.1-.15l-11.55-20a2.1,2.1,0,0,1,.77-2.87l12.12-7a2.11,2.11,0,0,1,2.87.77l7.55,13.09,3.71,1A7.66,7.66,0,0,1,1566.74,792.82Zm5.47,16.88-.47-7.79a6.26,6.26,0,0,0-1.91-4.15l-4.06-3.93a6.3,6.3,0,0,0-2.75-1.56l-2.36-.63,3,5.2a.7.7,0,0,1-.26,1,.69.69,0,0,1-1-.26l-11.55-20a.7.7,0,0,0-1-.26l-12.12,7a.7.7,0,0,0-.26,1l11.55,20a.7.7,0,0,0,1,.26l2.91-1.68-4.22-4.47a3.24,3.24,0,0,1,4-5l10.56,6.33a.72.72,0,0,1,.34.61.73.73,0,0,1-.36.6.7.7,0,0,1-.7,0l-10.56-6.33a1.84,1.84,0,0,0-2.29,2.84l14,14.91a1.38,1.38,0,0,0,1.71.25Zm-18.79,3.23a1.39,1.39,0,0,0,1.71-1l1.22-4.54-2.38-2.53-3.19,1.84a2.1,2.1,0,0,1-1.55.22l-.85,3.2a1.38,1.38,0,0,0,.14,1.07,1.4,1.4,0,0,0,.85.65,1.45,1.45,0,0,0,1.71-1l.74-2.76a.7.7,0,0,1,.85-.48.71.71,0,0,1,.5.85l-.74,2.75a1.4,1.4,0,0,0,1,1.71Zm6.13-1.25a1.4,1.4,0,0,1-2.37.67,1.43,1.43,0,0,1-.33-1.4l.63-2.34,2.26,2.39Z"
              transform="translate(-15.23 -3.41)"
              fillRule="evenodd"
              fill={`${opacity < 0.5 ? "black" : "#008E4C"}`}
            />
            <path
              d="M1543.38,782.7l-3,1.75a1.4,1.4,0,0,0-.51,1.91l2.1,3.64a.7.7,0,0,0,1,.25.69.69,0,0,0,.25-1l-2.1-3.64,3-1.75a.7.7,0,0,0,.25-1,.69.69,0,0,0-.95-.25Z"
              transform="translate(-15.23 -3.41)"
              fillRule="evenodd"
              fill={`${opacity < 0.5 ? "black" : "#008E4C"}`}
            />
            <path
              d="M1547.62,780.25l-1.82,1a.7.7,0,1,0,.7,1.21l1.82-1a.71.71,0,0,0,.26-1,.7.7,0,0,0-1-.25Z"
              transform="translate(-15.23 -3.41)"
              fillRule="evenodd"
              fill={`${opacity < 0.5 ? "black" : "#008E4C"}`}
            />
            <path
              d="M1543.59,791.46a.71.71,0,0,0-.26,1l.7,1.21a.7.7,0,1,0,1.21-.7l-.7-1.21a.7.7,0,0,0-1-.26Z"
              transform="translate(-15.23 -3.41)"
              fillRule="evenodd"
              fill={`${opacity < 0.5 ? "black" : "#008E4C"}`}
            />
          </g>
        )
      })}
    </svg>
  )
}

export default FloatIcons
